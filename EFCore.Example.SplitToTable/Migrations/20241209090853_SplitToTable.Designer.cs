// <auto-generated />
using EFCore.Example.SplitToTable;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCore.Example.SplitToTable.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20241209090853_SplitToTable")]
    partial class SplitToTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCore.Example.SplitToTable.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("MainId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MainId")
                        .IsUnique();

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("EFCore.Example.SplitToTable.Entities.Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Main");

                    b.SplitToTable("Details", null, t =>
                        {
                            t.Property("Description");
                        });
                });

            modelBuilder.Entity("EFCore.Example.SplitToTable.Entities.Blog", b =>
                {
                    b.HasOne("EFCore.Example.SplitToTable.Entities.Main", "Main")
                        .WithOne("Blog")
                        .HasForeignKey("EFCore.Example.SplitToTable.Entities.Blog", "MainId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Main");
                });

            modelBuilder.Entity("EFCore.Example.SplitToTable.Entities.Main", b =>
                {
                    b.HasOne("EFCore.Example.SplitToTable.Entities.Main", null)
                        .WithOne()
                        .HasForeignKey("EFCore.Example.SplitToTable.Entities.Main", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Example.SplitToTable.Entities.Main", b =>
                {
                    b.Navigation("Blog");
                });
#pragma warning restore 612, 618
        }
    }
}
